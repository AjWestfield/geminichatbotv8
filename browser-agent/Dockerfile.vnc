# Dockerfile for VNC Browser Service
FROM ubuntu:22.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Python and pip
    python3 python3-pip \
    # X11 and VNC
    xvfb x11vnc fluxbox \
    # Browser dependencies
    wget gnupg ca-certificates \
    fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 \
    libatk1.0-0 libcups2 libdbus-1-3 libgdk-pixbuf2.0-0 libnspr4 \
    libnss3 libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 \
    libxss1 libxtst6 lsb-release xdg-utils \
    # noVNC for web-based VNC client
    novnc websockify \
    # Other utilities
    curl supervisor \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip3 install -r requirements.txt
RUN playwright install chromium

# Copy application files
COPY vnc_browser_service.py .
COPY enhanced_browser_agent.py .
COPY integrated_browser_agent.py .
COPY browser_agent_service.py .
COPY integrated_browser_agent_v2.py .

# Create supervisor config
RUN mkdir -p /var/log/supervisor
COPY <<EOF /etc/supervisor/conf.d/supervisord.conf
[supervisord]
nodaemon=true
user=root

[program:xvfb]
command=/usr/bin/Xvfb :99 -screen 0 1280x720x24 -ac +extension GLX +render -noreset
autorestart=true
user=root
priority=100

[program:fluxbox]
command=/usr/bin/fluxbox
autorestart=true
user=root
environment=DISPLAY=":99"
priority=200

[program:x11vnc]
command=/usr/bin/x11vnc -display :99 -forever -shared -nopw -xkb -noxrecord -noxfixes -noxdamage -wait 5
autorestart=true
user=root
priority=300

[program:novnc]
command=/usr/share/novnc/utils/launch.sh --vnc localhost:5900 --listen 6080
autorestart=true
user=root
priority=400

[program:browser_service]
command=python3 /app/vnc_browser_service.py
directory=/app
autorestart=true
user=root
environment=DISPLAY=":99"
priority=500
stdout_logfile=/var/log/supervisor/browser_service.log
stderr_logfile=/var/log/supervisor/browser_service_err.log
EOF

# Expose ports
EXPOSE 5900 6080 8003

# Set display environment variable
ENV DISPLAY=:99

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]