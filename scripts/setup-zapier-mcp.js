#!/usr/bin/env node

import fs from 'fs/promises'
import path from 'path'
import { fileURLToPath } from 'url'
import readline from 'readline/promises'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)
const envPath = path.join(__dirname, '..', '.env.local')

async function setupZapierMCP() {
  console.log('\nüöÄ Zapier MCP Setup Helper\n')
  console.log('This script will help you configure Zapier MCP authentication.')
  console.log('\nFirst, you need to:')
  console.log('1. Visit https://mcp.zapier.com')
  console.log('2. Sign in with your Zapier account')
  console.log('3. Generate your unique MCP endpoint and API key')
  console.log('4. Come back here with those credentials\n')

  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  })

  try {
    const proceed = await rl.question('Have you obtained your MCP credentials? (y/n): ')
    
    if (proceed.toLowerCase() !== 'y') {
      console.log('\n‚ö†Ô∏è  Please visit https://mcp.zapier.com first to get your credentials.')
      process.exit(0)
    }

    console.log('\nGreat! Please enter your credentials:\n')
    
    const serverUrl = await rl.question('MCP Server URL: ')
    const apiKey = await rl.question('MCP API Key: ')

    // Validate inputs
    if (!serverUrl || !apiKey) {
      console.error('\n‚ùå Both URL and API key are required!')
      process.exit(1)
    }

    // Check for old/invalid patterns
    if (serverUrl.includes('nla.zapier.com')) {
      console.warn('\n‚ö†Ô∏è  Warning: This appears to be an old NLA endpoint.')
      console.warn('Make sure you got this from https://mcp.zapier.com\n')
    }

    if (apiKey.startsWith('sk-ak-')) {
      console.warn('\n‚ö†Ô∏è  Warning: This appears to be an old API key format.')
      console.warn('Make sure you got this from https://mcp.zapier.com\n')
    }

    // Read existing .env.local
    let envContent = ''
    try {
      envContent = await fs.readFile(envPath, 'utf-8')
    } catch (error) {
      console.log('\nüìù Creating new .env.local file...')
    }

    // Remove old Zapier MCP config if exists
    const lines = envContent.split('\n')
    const filteredLines = []
    let inZapierSection = false
    
    for (const line of lines) {
      if (line.includes('Zapier MCP Configuration')) {
        inZapierSection = true
      } else if (inZapierSection && line.trim() === '') {
        inZapierSection = false
      } else if (!inZapierSection || (!line.includes('ZAPIER_MCP_SERVER_URL') && !line.includes('ZAPIER_MCP_API_KEY'))) {
        filteredLines.push(line)
      }
    }

    // Add new configuration
    const newConfig = `
# Zapier MCP Configuration (Generated by setup script)
ZAPIER_MCP_SERVER_URL=${serverUrl}
ZAPIER_MCP_API_KEY=${apiKey}
`

    const finalContent = filteredLines.join('\n').trimEnd() + '\n' + newConfig

    // Write back to file
    await fs.writeFile(envPath, finalContent)

    console.log('\n‚úÖ Zapier MCP credentials have been saved to .env.local')
    console.log('\nüéØ Next steps:')
    console.log('1. Restart your development server: npm run dev')
    console.log('2. Open the MCP Tools panel in the chat interface')
    console.log('3. Zapier MCP should now appear with available tools')
    console.log('\nüìö For more information, visit: https://zapier.com/blog/zapier-mcp-guide/')

  } catch (error) {
    console.error('\n‚ùå Error:', error.message)
    process.exit(1)
  } finally {
    rl.close()
  }
}

setupZapierMCP()